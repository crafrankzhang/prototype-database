1. Basic information
Team number (e.g., 01) : 27

#2 Student ID :************
#2 Student Name : xinranzhang
OS (bit) :ubuntu	
gcc version : 4.4


2. Catalog information about Index
- Show your catalog information about an index (tables, columns). 
a index table named tablename_index, and it locate besides the data table. whenever index create it will reflect table
it has unique ID with filename and tablename save in table
cloumn not be affected
3. Block Nested Loop Join (If you have implemented this feature)
- Describe how your block nested loop join works (especially, how you manage the given buffers.)
1. calculate the number of buffer can be stored in one buff
2. pagenum * one page num is total num, we read such data store it in a hashtable
we scan right tuple, see if there are equal in o(1), when scan finish, change the content in hastable, until all left data scaned

4. Index Nested Loop Join (If you have implemented this feature)
- Describe how your grace hash join works.
we scan all tuple in left and find all tuple in right that are satisfy condition, we use the function COMP in ix to do that job,we find what we need return it

5. Grace Hash Join (If you have implemented this feature)
- Describe how your grace hash join works (especially, in-memory structure).


6. Aggregation
- Describe how your aggregation (basic, group-based hash) works.
we just scan all the data, get the value, to calculate 5 aggreation, for convience we only use float type, string cannot calculate  max min avg total;

7. Implementation Detail
- Have you added your own source file (.cc or .h)?

- Have you implemented any optional features? Then, describe them here.

- Other implementation details:


6. Other (optional)
- Freely use this section to tell us about things that are related to the project 4, but not related to the other sections (optional)

